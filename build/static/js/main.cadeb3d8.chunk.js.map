{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["subdomain","storeDescription","io","require","port","process","PORT","App","socket","connect","useState","storename","setStorename","storeTitle","setStoreTitle","on","data","disconnect","hostname","console","log","JSON","stringify","details","useEffect","document","title","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sJAMIA,EAGAC,E,iEANIC,EAAOC,EAAQ,IAAfD,GAOFE,EAAOC,mIAAYC,MAAQ,IA0ClBC,MAxCf,WACE,IAAMC,EAASN,IACfM,EAAOC,QAAP,2BAAmCL,IAFtB,MAGqBM,mBAAS,IAH9B,mBAGNC,EAHM,KAGKC,EAHL,OAIuBF,mBAAS,IAJhC,mBAING,EAJM,KAIMC,EAJN,KAyBb,OApBAN,EAAOO,GAAG,aAAa,SAACC,GACtBR,EAAOS,aACPjB,EAAYgB,EAAKE,SACFF,EAAI,QACnBG,QAAQC,IAAI,sBAAwBC,KAAKC,UAAUN,EAAI,UAEvDf,EAAmBe,EAAKO,QAAL,YACnBX,EAAaI,EAAKE,UAClBJ,EAAcE,EAAKO,QAAL,YACdJ,QAAQC,IAAR,uBAA4BC,KAAKC,UAAUN,KAC3CG,QAAQC,IAAR,yBAA8BP,OAGhCW,qBAAU,WACRC,SAASC,MAAQb,IAChB,IAMD,sBAAKc,UAAU,MAAf,UACE,8CAAiB3B,EAAjB,aACA,kDAAqBW,EAArB,OACA,uBACA,+CAAkBE,KAClB,qDAAwBZ,KAExB,sDCjCS2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,SAM1BZ,M","file":"static/js/main.cadeb3d8.chunk.js","sourcesContent":["//import logo from './logo.svg';\nimport './App.css';\nimport React, {useState, useEffect} from 'react';\nconst { io } = require(\"socket.io-client\");\n\n\nvar subdomain;\nvar storeContent;\n//var storeTitle;\nvar storeDescription;\nconst port = process.env.PORT || 5000;\n\nfunction App() {\n  const socket = io();\n  socket.connect(`http://localhost:${port}`);\n  const [storename, setStorename] = useState('');\n  const [storeTitle, setStoreTitle] = useState('');\n  socket.on(\"subdomain\", (data)=>{\n    socket.disconnect();\n    subdomain = data.hostname\n    storeContent = data[\"details\"]\n    console.log(\"store details are: \" + JSON.stringify(data[\"details\"]))\n    //storeTitle = data.details[\"page_title\"];\n    storeDescription = data.details[\"description\"];\n    setStorename(data.hostname);\n    setStoreTitle(data.details[\"page_title\"]);\n    console.log(`data sent is ${JSON.stringify(data)}`);\n    console.log(`store title is ${storeTitle}`);\n  })\n\n  useEffect(() => {\n    document.title = storeTitle;\n  }, [])\n\n  // socket.on(\"connection\", function (socket) {\n  //   console.log(`Made socket connection, data is: ${socket}`);\n  // })\n  return (\n    <div className=\"App\">\n      <h1> Welcome to {subdomain} store </h1>\n      <h2> Store name is: {storename} </h2>\n      <br></br>\n      <h2>Store Title: {storeTitle}</h2>\n      <h2>Store Description: {storeDescription}</h2>\n\n      <p>\n        Hi Test App works\n      </p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}